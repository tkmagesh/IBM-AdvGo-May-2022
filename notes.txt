Magesh Kuppan

Schedule:
    Commence    : 9:30 AM
    Tea Break   : 11:00 AM (20 mins)
    Lunch Break : 1:00 PM (1 hr)
    Tea Break   : 3:30 PM (20 mins)
    End         : 5:30 PM

About You
    Name
    Total Experience
    Experience in Go
    Have you attended my "Go Basics" course?

Methodology:
    No powerpoint

Repository:
    https://github.com/tkmagesh/ibm-advgo-may-2022

Basics:
    Higher-order functions
    
    Consumption or resources
    Is OOPS supported?
    Using 3rd party libraries
    Code Organization
    Concurrency

Go:
    No classes (only structs)
    No inheritance (only composition)
    No access modifiers (only naming convention)
    No exceptions (only errors)
    No reference types (everything is a value in go)
    No implicity type conversions
    There can be more than one return results from a function

Higher Order Functions (functions as data)
    Assign functions as values to variables
    Pass functions as arguments
    Return unctions as results from functions

Concurrency

    To detect data races
        go run --race <program.go>

    Channel
        Data type in go
        Used for concurrency safe communication between goroutines

        var ch chan int
        ch = make(chan int)

        channel operation ( <- )

        Send Operation
            ch <- 100

        Receive Operation
            val := <- ch

    
    Channels
        A "Receive" operation is ALWAYS blocking operation

        A "Send" operation is blocked until a "receive" operation is initiated